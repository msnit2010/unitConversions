{"version":3,"file":"static/js/648.ecc07a2c.chunk.js","mappings":"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","sources":["components/converter/ConversionDetails.js","../node_modules/@mui/icons-material/ContentCopy.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport {\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Tooltip,\r\n  useTheme,\r\n  Collapse,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { useLanguage } from '../../contexts/LanguageContext';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '../common/Paper';\r\n\r\n// Memoize ResultBox for performance\r\nconst ResultBox = memo(({ label, value, copyable = true, onCopy, copied }) => {\r\n  const theme = useTheme();\r\n  const { t } = useLanguage();\r\n\r\n  return (\r\n    <Box\r\n      role=\"region\"\r\n      aria-label={label}\r\n      sx={{\r\n        p: 2,\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: theme.palette.mode === 'dark' \r\n          ? theme.palette.grey[900] \r\n          : theme.palette.grey[50],\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        gap: 2,\r\n        transition: 'all 0.2s ease-in-out',\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.mode === 'dark'\r\n            ? theme.palette.grey[800]\r\n            : theme.palette.grey[100]\r\n        }\r\n      }}\r\n    >\r\n      <Box>\r\n        <Typography\r\n          variant=\"caption\"\r\n          color=\"text.secondary\"\r\n          component=\"span\"\r\n          sx={{\r\n            fontSize: theme.typography.caption.fontSize,\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            letterSpacing: '0.05em',\r\n            mb: 0.5,\r\n            display: 'block'\r\n          }}\r\n        >\r\n          {label}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          component=\"div\"\r\n          sx={{\r\n            fontSize: theme.typography.body1.fontSize,\r\n            fontWeight: 500,\r\n            wordBreak: 'break-word'\r\n          }}\r\n        >\r\n          {value}\r\n        </Typography>\r\n      </Box>\r\n      {copyable && (\r\n        <Tooltip \r\n          title={copied ? t('common.copied') : t('common.copy')} \r\n          arrow\r\n          placement=\"top\"\r\n        >\r\n          <IconButton\r\n            onClick={() => onCopy(value)}\r\n            size=\"medium\"\r\n            aria-label={t('common.copy')}\r\n            aria-pressed={copied}\r\n            sx={{\r\n              width: 44,\r\n              height: 44,\r\n              borderRadius: '50%',\r\n              transition: 'all 0.2s ease-in-out',\r\n              '&:hover': {\r\n                backgroundColor: theme.palette.action.hover\r\n              },\r\n              '&:active': {\r\n                backgroundColor: theme.palette.action.selected,\r\n                transform: 'scale(0.95)'\r\n              },\r\n              '&:focus-visible': {\r\n                outline: `2px solid ${theme.palette.primary.main}`,\r\n                outlineOffset: 2\r\n              }\r\n            }}\r\n          >\r\n            <ContentCopyIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Box>\r\n  );\r\n});\r\n\r\nResultBox.displayName = 'ResultBox';\r\n\r\nconst ConversionDetails = ({ result, sx = {} }) => {\r\n  const { t } = useLanguage();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [copied, setCopied] = React.useState(false);\r\n\r\n  const handleCopy = React.useCallback(async (text) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      console.error('Failed to copy text:', err);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      role=\"region\"\r\n      aria-label={t('common.result')}\r\n      sx={{\r\n        p: { xs: 2, sm: 3 },\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n        ...sx\r\n      }}\r\n    >\r\n      <Box \r\n        sx={{ \r\n          display: 'flex', \r\n          flexDirection: 'column', \r\n          gap: 2 \r\n        }}\r\n      >\r\n        <ResultBox\r\n          label={t('common.from')}\r\n          value={result.from.formatted}\r\n          onCopy={handleCopy}\r\n          copied={copied}\r\n        />\r\n        <ResultBox\r\n          label={t('common.to')}\r\n          value={result.to.formatted}\r\n          onCopy={handleCopy}\r\n          copied={copied}\r\n        />\r\n        {result.formula && (\r\n          <ResultBox\r\n            label={t('common.formula')}\r\n            value={result.formula}\r\n            copyable={false}\r\n          />\r\n        )}\r\n        {result.steps && result.steps.length > 0 && (\r\n          <Box\r\n            role=\"region\"\r\n            aria-label={t('common.steps')}\r\n            sx={{\r\n              p: 2,\r\n              borderRadius: theme.shape.borderRadius,\r\n              backgroundColor: theme.palette.mode === 'dark' \r\n                ? theme.palette.grey[900] \r\n                : theme.palette.grey[50]\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"caption\"\r\n              color=\"text.secondary\"\r\n              component=\"h3\"\r\n              sx={{\r\n                fontSize: theme.typography.caption.fontSize,\r\n                fontWeight: 500,\r\n                textTransform: 'uppercase',\r\n                letterSpacing: '0.05em',\r\n                mb: 1,\r\n                display: 'block'\r\n              }}\r\n            >\r\n              {t('common.steps')}\r\n            </Typography>\r\n            <ol style={{ margin: 0, paddingLeft: 20 }}>\r\n              {result.steps.map((step, index) => (\r\n                <Typography\r\n                  key={index}\r\n                  variant=\"body2\"\r\n                  component=\"li\"\r\n                  sx={{\r\n                    fontSize: theme.typography.body2.fontSize,\r\n                    lineHeight: 1.6,\r\n                    mb: index < result.steps.length - 1 ? 1 : 0\r\n                  }}\r\n                >\r\n                  {step}\r\n                </Typography>\r\n              ))}\r\n            </ol>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Collapse in={copied}>\r\n        <Box\r\n          role=\"alert\"\r\n          aria-live=\"polite\"\r\n          sx={{\r\n            mt: 2,\r\n            p: 1,\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: theme.palette.success.main,\r\n            color: theme.palette.success.contrastText,\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            {t('common.copied')}\r\n          </Typography>\r\n        </Box>\r\n      </Collapse>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nConversionDetails.propTypes = {\r\n  result: PropTypes.shape({\r\n    from: PropTypes.shape({\r\n      unit: PropTypes.string.isRequired,\r\n      value: PropTypes.number.isRequired,\r\n      formatted: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    to: PropTypes.shape({\r\n      unit: PropTypes.string.isRequired,\r\n      value: PropTypes.number.isRequired,\r\n      formatted: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    formula: PropTypes.string,\r\n    steps: PropTypes.arrayOf(PropTypes.string)\r\n  }).isRequired,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default memo(ConversionDetails); ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');"],"names":["ResultBox","memo","_ref","label","value","copyable","onCopy","copied","theme","useTheme","t","useLanguage","_jsxs","Box","role","sx","p","borderRadius","shape","backgroundColor","palette","mode","grey","display","alignItems","justifyContent","gap","transition","children","_jsx","Typography","variant","color","component","fontSize","typography","caption","fontWeight","textTransform","letterSpacing","mb","body1","wordBreak","Tooltip","title","arrow","placement","IconButton","onClick","size","width","height","action","hover","selected","transform","outline","concat","primary","main","outlineOffset","ContentCopyIcon","displayName","ConversionDetails","_ref2","result","setCopied","useMediaQuery","breakpoints","down","React","handleCopy","async","navigator","clipboard","writeText","text","setTimeout","err","console","error","Paper","elevation","_objectSpread","xs","sm","background","paper","border","divider","flexDirection","from","formatted","to","formula","steps","length","style","margin","paddingLeft","map","step","index","body2","lineHeight","Collapse","in","mt","success","contrastText","textAlign","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}