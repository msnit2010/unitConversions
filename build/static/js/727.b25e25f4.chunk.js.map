{"version":3,"file":"static/js/727.b25e25f4.chunk.js","mappings":"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","sources":["data/commonConversions.js","components/converter/CommonConversions.js"],"sourcesContent":["// Common conversion categories and their most used conversions\r\nexport const commonConversions = [\r\n  {\r\n    id: 'length-m-ft',\r\n    category: 'Length',\r\n    name: 'Meters to Feet',\r\n    from: 'meters',\r\n    to: 'feet'\r\n  },\r\n  {\r\n    id: 'length-km-mi',\r\n    category: 'Length',\r\n    name: 'Kilometers to Miles',\r\n    from: 'kilometers',\r\n    to: 'miles'\r\n  },\r\n  {\r\n    id: 'weight-kg-lb',\r\n    category: 'Weight',\r\n    name: 'Kilograms to Pounds',\r\n    from: 'kilograms',\r\n    to: 'pounds'\r\n  },\r\n  {\r\n    id: 'temperature-c-f',\r\n    category: 'Temperature',\r\n    name: 'Celsius to Fahrenheit',\r\n    from: 'celsius',\r\n    to: 'fahrenheit'\r\n  },\r\n  {\r\n    id: 'volume-l-gal',\r\n    category: 'Volume',\r\n    name: 'Liters to Gallons',\r\n    from: 'liters',\r\n    to: 'gallons'\r\n  },\r\n  {\r\n    id: 'length-cm-in',\r\n    category: 'Length',\r\n    name: 'Centimeters to Inches',\r\n    from: 'centimeters',\r\n    to: 'inches'\r\n  }\r\n];\r\n\r\n// We'll export both ways to ensure compatibility\r\nexport default commonConversions; ","import React, { memo } from 'react';\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Grid\r\n} from '@mui/material';\r\nimport { useLanguage } from '../../contexts/LanguageContext';\r\nimport PropTypes from 'prop-types';\r\nimport { commonConversions } from '../../data/commonConversions';\r\nimport Paper from '../common/Paper';\r\n\r\nconst CommonConversions = ({ onSelect, sx = {} }) => {\r\n  const { t } = useLanguage();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // Memoize the handler to prevent unnecessary re-renders\r\n  const handleSelect = React.useCallback((conversion) => {\r\n    onSelect(conversion);\r\n  }, [onSelect]);\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      role=\"region\"\r\n      aria-label={t('common.commonConversions')}\r\n      sx={{\r\n        p: { xs: 2, sm: 3 },\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n        ...sx\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h6\"\r\n        component=\"h2\"\r\n        sx={{\r\n          fontSize: theme.typography.h6.fontSize,\r\n          fontWeight: 600,\r\n          mb: 2,\r\n          color: theme.palette.text.primary\r\n        }}\r\n      >\r\n        {t('common.commonConversions')}\r\n      </Typography>\r\n      <Grid \r\n        container \r\n        spacing={2}\r\n        role=\"list\"\r\n        aria-label={t('common.commonConversions')}\r\n      >\r\n        {commonConversions.map((conversion, index) => (\r\n          <Grid \r\n            item \r\n            xs={12} \r\n            sm={6} \r\n            key={`${conversion.category}-${conversion.from}-${conversion.to}`}\r\n            role=\"listitem\"\r\n          >\r\n            <Button\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onClick={() => handleSelect(conversion)}\r\n              aria-label={t('converter.convertFrom', {\r\n                from: t(`units.${conversion.from.toLowerCase()}`),\r\n                to: t(`units.${conversion.to.toLowerCase()}`)\r\n              })}\r\n              sx={{\r\n                height: 44,\r\n                justifyContent: 'flex-start',\r\n                textAlign: 'left',\r\n                borderRadius: theme.shape.borderRadius,\r\n                borderWidth: 1,\r\n                borderColor: theme.palette.divider,\r\n                backgroundColor: theme.palette.mode === 'dark' \r\n                  ? theme.palette.grey[900] \r\n                  : theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                transition: 'all 0.2s ease-in-out',\r\n                '&:hover': {\r\n                  backgroundColor: theme.palette.mode === 'dark'\r\n                    ? theme.palette.grey[800]\r\n                    : theme.palette.grey[50],\r\n                  borderColor: theme.palette.primary.main\r\n                },\r\n                '&:active': {\r\n                  backgroundColor: theme.palette.mode === 'dark'\r\n                    ? theme.palette.grey[800]\r\n                    : theme.palette.grey[100],\r\n                  transform: 'scale(0.98)'\r\n                },\r\n                '&:focus-visible': {\r\n                  outline: `2px solid ${theme.palette.primary.main}`,\r\n                  outlineOffset: 2\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ width: '100%' }}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  sx={{\r\n                    fontSize: theme.typography.body2.fontSize,\r\n                    fontWeight: 500,\r\n                    color: 'inherit',\r\n                    display: 'block'\r\n                  }}\r\n                >\r\n                  {t(`units.${conversion.from.toLowerCase()}`)} â†’ {t(`units.${conversion.to.toLowerCase()}`)}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  sx={{\r\n                    fontSize: theme.typography.caption.fontSize,\r\n                    color: theme.palette.text.secondary,\r\n                    display: 'block',\r\n                    mt: 0.5\r\n                  }}\r\n                >\r\n                  {t(`categories.${conversion.category}`)}\r\n                </Typography>\r\n              </Box>\r\n            </Button>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nCommonConversions.propTypes = {\r\n  onSelect: PropTypes.func.isRequired,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default memo(CommonConversions); "],"names":["commonConversions","id","category","name","from","to","CommonConversions","_ref","onSelect","sx","t","useLanguage","theme","useTheme","handleSelect","useMediaQuery","breakpoints","down","React","conversion","_jsxs","Paper","elevation","role","_objectSpread","p","xs","sm","borderRadius","shape","backgroundColor","palette","background","paper","border","concat","divider","children","_jsx","Typography","variant","component","fontSize","typography","h6","fontWeight","mb","color","text","primary","Grid","container","spacing","map","index","item","Button","fullWidth","onClick","toLowerCase","height","justifyContent","textAlign","borderWidth","borderColor","mode","grey","transition","main","transform","outline","outlineOffset","Box","width","body2","display","caption","secondary","mt","memo"],"sourceRoot":""}