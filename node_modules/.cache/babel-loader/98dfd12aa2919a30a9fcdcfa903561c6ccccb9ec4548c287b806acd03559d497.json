{"ast":null,"code":"var _jsxFileName = \"/home/sifann/workspace/src/components/converter/CommonConversions.js\",\n  _s = $RefreshSig$();\nimport React, { memo } from 'react';\nimport { Typography, Box, Button, useTheme, useMediaQuery, Grid } from '@mui/material';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport PropTypes from 'prop-types';\nimport { commonConversions } from '../../data/commonConversions';\nimport Paper from '../common/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommonConversions = ({\n  onSelect,\n  sx = {}\n}) => {\n  _s();\n  const {\n    t\n  } = useLanguage();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // Memoize the handler to prevent unnecessary re-renders\n  const handleSelect = React.useCallback(conversion => {\n    onSelect(conversion);\n  }, [onSelect]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    role: \"region\",\n    \"aria-label\": t('common.commonConversions'),\n    sx: {\n      p: {\n        xs: 2,\n        sm: 3\n      },\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.background.paper,\n      border: `1px solid ${theme.palette.divider}`,\n      ...sx\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      sx: {\n        fontSize: theme.typography.h6.fontSize,\n        fontWeight: 600,\n        mb: 2,\n        color: theme.palette.text.primary\n      },\n      children: t('common.commonConversions')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      role: \"list\",\n      \"aria-label\": t('common.commonConversions'),\n      children: commonConversions.map((conversion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        role: \"listitem\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          onClick: () => handleSelect(conversion),\n          \"aria-label\": t('converter.convertFrom', {\n            from: t(`units.${conversion.from.toLowerCase()}`),\n            to: t(`units.${conversion.to.toLowerCase()}`)\n          }),\n          sx: {\n            height: 44,\n            justifyContent: 'flex-start',\n            textAlign: 'left',\n            borderRadius: theme.shape.borderRadius,\n            borderWidth: 1,\n            borderColor: theme.palette.divider,\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[900] : theme.palette.background.paper,\n            color: theme.palette.text.primary,\n            transition: 'all 0.2s ease-in-out',\n            '&:hover': {\n              backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : theme.palette.grey[50],\n              borderColor: theme.palette.primary.main\n            },\n            '&:active': {\n              backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : theme.palette.grey[100],\n              transform: 'scale(0.98)'\n            },\n            '&:focus-visible': {\n              outline: `2px solid ${theme.palette.primary.main}`,\n              outlineOffset: 2\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              component: \"span\",\n              sx: {\n                fontSize: theme.typography.body2.fontSize,\n                fontWeight: 500,\n                color: 'inherit',\n                display: 'block'\n              },\n              children: [t(`units.${conversion.from.toLowerCase()}`), \" \\u2192 \", t(`units.${conversion.to.toLowerCase()}`)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              component: \"span\",\n              sx: {\n                fontSize: theme.typography.caption.fontSize,\n                color: theme.palette.text.secondary,\n                display: 'block',\n                mt: 0.5\n              },\n              children: t(`categories.${conversion.category}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, `${conversion.category}-${conversion.from}-${conversion.to}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CommonConversions, \"XydQlJaxH70Jovtxw2cNHjZKoSA=\", false, function () {\n  return [useLanguage, useTheme, useMediaQuery];\n});\n_c = CommonConversions;\nCommonConversions.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  sx: PropTypes.object\n};\nexport default _c2 = /*#__PURE__*/memo(CommonConversions);\nvar _c, _c2;\n$RefreshReg$(_c, \"CommonConversions\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","Typography","Box","Button","useTheme","useMediaQuery","Grid","useLanguage","PropTypes","commonConversions","Paper","jsxDEV","_jsxDEV","CommonConversions","onSelect","sx","_s","t","theme","isMobile","breakpoints","down","handleSelect","useCallback","conversion","elevation","role","p","xs","sm","borderRadius","shape","backgroundColor","palette","background","paper","border","divider","children","variant","component","fontSize","typography","h6","fontWeight","mb","color","text","primary","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","index","item","fullWidth","onClick","from","toLowerCase","to","height","justifyContent","textAlign","borderWidth","borderColor","mode","grey","transition","main","transform","outline","outlineOffset","width","body2","display","caption","secondary","mt","category","_c","propTypes","func","isRequired","object","_c2","$RefreshReg$"],"sources":["/home/sifann/workspace/src/components/converter/CommonConversions.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Grid\r\n} from '@mui/material';\r\nimport { useLanguage } from '../../contexts/LanguageContext';\r\nimport PropTypes from 'prop-types';\r\nimport { commonConversions } from '../../data/commonConversions';\r\nimport Paper from '../common/Paper';\r\n\r\nconst CommonConversions = ({ onSelect, sx = {} }) => {\r\n  const { t } = useLanguage();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // Memoize the handler to prevent unnecessary re-renders\r\n  const handleSelect = React.useCallback((conversion) => {\r\n    onSelect(conversion);\r\n  }, [onSelect]);\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      role=\"region\"\r\n      aria-label={t('common.commonConversions')}\r\n      sx={{\r\n        p: { xs: 2, sm: 3 },\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `1px solid ${theme.palette.divider}`,\r\n        ...sx\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h6\"\r\n        component=\"h2\"\r\n        sx={{\r\n          fontSize: theme.typography.h6.fontSize,\r\n          fontWeight: 600,\r\n          mb: 2,\r\n          color: theme.palette.text.primary\r\n        }}\r\n      >\r\n        {t('common.commonConversions')}\r\n      </Typography>\r\n      <Grid \r\n        container \r\n        spacing={2}\r\n        role=\"list\"\r\n        aria-label={t('common.commonConversions')}\r\n      >\r\n        {commonConversions.map((conversion, index) => (\r\n          <Grid \r\n            item \r\n            xs={12} \r\n            sm={6} \r\n            key={`${conversion.category}-${conversion.from}-${conversion.to}`}\r\n            role=\"listitem\"\r\n          >\r\n            <Button\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onClick={() => handleSelect(conversion)}\r\n              aria-label={t('converter.convertFrom', {\r\n                from: t(`units.${conversion.from.toLowerCase()}`),\r\n                to: t(`units.${conversion.to.toLowerCase()}`)\r\n              })}\r\n              sx={{\r\n                height: 44,\r\n                justifyContent: 'flex-start',\r\n                textAlign: 'left',\r\n                borderRadius: theme.shape.borderRadius,\r\n                borderWidth: 1,\r\n                borderColor: theme.palette.divider,\r\n                backgroundColor: theme.palette.mode === 'dark' \r\n                  ? theme.palette.grey[900] \r\n                  : theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                transition: 'all 0.2s ease-in-out',\r\n                '&:hover': {\r\n                  backgroundColor: theme.palette.mode === 'dark'\r\n                    ? theme.palette.grey[800]\r\n                    : theme.palette.grey[50],\r\n                  borderColor: theme.palette.primary.main\r\n                },\r\n                '&:active': {\r\n                  backgroundColor: theme.palette.mode === 'dark'\r\n                    ? theme.palette.grey[800]\r\n                    : theme.palette.grey[100],\r\n                  transform: 'scale(0.98)'\r\n                },\r\n                '&:focus-visible': {\r\n                  outline: `2px solid ${theme.palette.primary.main}`,\r\n                  outlineOffset: 2\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ width: '100%' }}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  sx={{\r\n                    fontSize: theme.typography.body2.fontSize,\r\n                    fontWeight: 500,\r\n                    color: 'inherit',\r\n                    display: 'block'\r\n                  }}\r\n                >\r\n                  {t(`units.${conversion.from.toLowerCase()}`)} → {t(`units.${conversion.to.toLowerCase()}`)}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  sx={{\r\n                    fontSize: theme.typography.caption.fontSize,\r\n                    color: theme.palette.text.secondary,\r\n                    display: 'block',\r\n                    mt: 0.5\r\n                  }}\r\n                >\r\n                  {t(`categories.${conversion.category}`)}\r\n                </Typography>\r\n              </Box>\r\n            </Button>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nCommonConversions.propTypes = {\r\n  onSelect: PropTypes.func.isRequired,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default memo(CommonConversions); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}