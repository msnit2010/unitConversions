{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';export const convertUnits=async(category,fromUnit,toUnit,value)=>{try{const response=await fetch(\"\".concat(API_URL,\"/api/convert\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({category,fromUnit,toUnit,value})});if(!response.ok){throw new Error('Conversion failed');}return await response.json();}catch(error){console.error('API error:',error);throw error;}};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","convertUnits","category","fromUnit","toUnit","value","response","fetch","concat","method","headers","body","JSON","stringify","ok","Error","json","error","console"],"sources":["/home/sifann/workspace/src/services/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nexport const convertUnits = async (category, fromUnit, toUnit, value) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/api/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        category,\r\n        fromUnit,\r\n        toUnit,\r\n        value\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Conversion failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API error:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAExE,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,CAAEC,MAAM,CAAEC,KAAK,GAAK,CACvE,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIX,OAAO,iBAAgB,CACrDY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBX,QAAQ,CACRC,QAAQ,CACRC,MAAM,CACNC,KACF,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEA,MAAO,MAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}